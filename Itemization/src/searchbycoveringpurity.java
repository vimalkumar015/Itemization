import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import net.proteanit.sql.DbUtils;

/**
 *
 * @author vimiv
 */
public class searchbycoveringpurity extends javax.swing.JFrame {

    /**
     * Creates new form searchbycoveringpurity
     */
    public searchbycoveringpurity() {
    	setTitle("ITEMIZATION -  Search By Purity (Covering)");
    	setIconImage(Toolkit.getDefaultToolkit().getImage(searchbycoveringpurity.class.getResource("/images/itemization_logo.png")));
    	getContentPane().setBackground(new Color(175, 238, 238));
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setEnabled(false);
        jTable1 = new javax.swing.JTable();
        jTable1.setEnabled(false);
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("From");

        jComboBox1.setModel(new DefaultComboBoxModel(new String[] {"", "In Stock", "Sold Out"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jButton1)
                .addGap(162, 162, 162)
                .addComponent(jButton2)
                .addContainerGap(244, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    	MessageFormat header = null;
    	if(jComboBox1.getSelectedItem() == "In Stock")
    	{
    	header = new MessageFormat("List by Covering Purity from In Stock List");
    	}else if(jComboBox1.getSelectedItem() == "Sold Out")
    	{
    	header = new MessageFormat("List by Covering Purity from Sold Out List");
    	}else if(jComboBox1.getSelectedItem() == "")
    	{
    		JOptionPane.showMessageDialog(null, "Please choose any one in the From Field");
    	}
    	MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(instocklist.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	searchbypuritynavi.main(null);
    	this.dispose();
    }                                        

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {                                    
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
        	MessageFormat header = null;
        	if(jComboBox1.getSelectedItem() == "In Stock")
        	{
        	header = new MessageFormat("List by Covering Purity from In Stock List");
        	}else if(jComboBox1.getSelectedItem() == "Sold Out")
        	{
        	header = new MessageFormat("List by Covering Purity from Sold Out List");
        	}else if(jComboBox1.getSelectedItem() == "")
        	{
        		JOptionPane.showMessageDialog(null, "Please choose any one in the From Field");
        	}
        	MessageFormat footer = new MessageFormat("Page{0,number,integer}");
            try {
                jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            } catch (PrinterException ex) {
                Logger.getLogger(instocklist.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
        	searchbypuritynavi.main(null);
        	this.dispose();
        }
    }                                   

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {                                    
    	if(evt.getKeyCode() == KeyEvent.VK_ENTER)
    	{
    		searchbypuritynavi.main(null);
        	this.dispose();
    	}else if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
        {
        	searchbypuritynavi.main(null);
        	this.dispose();
        }
    }                                   

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if(jComboBox1.getSelectedItem() == "In stock")
        {
        	try {
				Class.forName("com.mysql.jdbc.Driver");
				Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gdlashmi?useSSL=false","root","");
				PreparedStatement pst = (PreparedStatement) con.prepareStatement("SELECT `id` as ID, `product_name` as PRODUCT, `Purity` as PURITY, `location` as LOCATION, `gross_weight` as `GROSS WEIGHT`, date(`date&time`) as `CREATED ON` FROM `stocklist` WHERE Purity = \"Covering\" and flag =1");
				ResultSet rs = pst.executeQuery();
                if(rs != null)
                {
                   jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
			} catch (Exception e) {
				e.printStackTrace();
			}
        	
        }else if(jComboBox1.getSelectedItem() == "Sold Out")
        {
        	try {
				Class.forName("com.mysql.jdbc.Driver");
				Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gdlashmi?useSSL=false","root","");
				PreparedStatement pst = (PreparedStatement) con.prepareStatement("SELECT `id` as ID, `product_name` as PRODUCT, `Purity` as PURITY, `location` as LOCATION, `gross_weight` as `GROSS WEIGHT`, date(`date&time`) as `CREATED ON` FROM `stocklist` WHERE Purity = \"Covering\" and flag =0");
				ResultSet rs = pst.executeQuery();
                if(rs != null)
                {
                   jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
			} catch (Exception e) {
				e.printStackTrace();
			}
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchbycoveringpurity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchbycoveringpurity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchbycoveringpurity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchbycoveringpurity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchbycoveringpurity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
